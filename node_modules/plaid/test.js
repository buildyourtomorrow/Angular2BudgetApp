'use strict';

const P = require('bluebird');
const plaid = require('./');
const R = require('ramda');

P.promisifyAll(plaid);

const client = new plaid.Client(
  '522e58c620b2fc17b6000002',
  'qYFJmfT3IeBlH2kcE2fb0oaK',
  plaid.environments.tartan
);

const chars = R.map(i => String.fromCharCode(i + 97), R.range(0, 26));

const addInvalidItem = () => {


  const makeUser = () => {
    return 'user_good_' + chars[Math.floor(Math.random()*chars.length)] + '_' + chars[Math.floor(Math.random()*chars.length)];
  };

  return client.addConnectUserAsync('sandbox', {
    username: makeUser(),
    password: 'pass_bad',
  }, {});
};

P.coroutine(function*() {
  for (var i = 0; i < 50; i += 1) {
    try {
      const res = yield addInvalidItem();
    } catch (err) {
      console.log('iteration ' + i + ' -- got error: ' + err.message);
    }
  }
})();

